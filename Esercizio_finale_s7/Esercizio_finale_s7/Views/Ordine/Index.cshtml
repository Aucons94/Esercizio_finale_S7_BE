@model IEnumerable<Esercizio_finale_s7.Models.Ordine>

@{
    ViewBag.Title = "Index";
    bool isAdmin = User.IsInRole("Admin");
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table table-striped">
    <thead>
        <tr>
            <th>
                Utente
            </th>
            <th>
                Data Ordine
            </th>
            <th>
                Importo
            </th>
            <th>
                Indirizzo Consegna
            </th>
            <th>
                Note Speciali
            </th>
            <th>
                Evaso
            </th>
            @if (isAdmin)
            {
                <th></th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Utente.Nome)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DataOrdine)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Importo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IndirizzoConsegna)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NoteSpeciali)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EvasoDisplay)
                </td>

                @if (isAdmin)
                {
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.IdOrdine }, new { @class = "btn btn-primary" }) |
                        @Html.ActionLink("Details", "Details", new { id = item.IdOrdine }, new { @class = "btn btn-info" }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.IdOrdine }, new { @class = "btn btn-danger" })
                    </td>
                }
            </tr>
        }
    </tbody>
</table>
<p id="totaleOrdiniEvasi">Totale Ordini Evasi: </p>
<input type="date" id="dataOrdine" name="dataOrdine">
<button onclick="fetchSommaImporti()">Calcola Somma Importi</button>
<p id="sommaImporti">Somma Importi Ordini Evasi: </p>


@section Scripts {
    <script>
        function getTotaleOrdiniEvasi() {
            fetch('https://localhost:44356/Ordine/GetTotaleOrdiniEvasi')
                .then(response => response.json())
                .then(data => {
                    const totaleOrdiniEvasiElement = document.getElementById("totaleOrdiniEvasi");
                    totaleOrdiniEvasiElement.innerText = "Totale Ordini Evasi: " + data; // Imposta il totale come numero
                })
                .catch(error => {
                    console.error('Si è verificato un errore durante il recupero del totale degli ordini evasi:', error);
                });
        }

        // Chiamare la funzione quando la pagina è pronta
        document.addEventListener('DOMContentLoaded', function () {
            getTotaleOrdiniEvasi();
        });
        function fetchSommaImporti() {
            const dataOrdine = document.getElementById("dataOrdine").value;

            fetch(`https://localhost:44356/Ordine/GetSommaImportiOrdiniEvasi?data=${dataOrdine}`)
                .then(response => response.json())
                .then(data => {
                    const sommaImportiElement = document.getElementById("sommaImporti");
                    sommaImportiElement.innerText = "Somma Importi Ordini Evasi: " + data; // Imposta la somma degli importi
                })
                .catch(error => {
                    console.error('Si è verificato un errore durante il recupero della somma degli importi:', error);
                });
        }

    </script>
}
